[{"C:\\Accenture\\web\\React\\contatore-redux\\src\\index.js":"1","C:\\Accenture\\web\\React\\contatore-redux\\src\\store.js":"2","C:\\Accenture\\web\\React\\contatore-redux\\src\\App.js":"3","C:\\Accenture\\web\\React\\contatore-redux\\src\\reportWebVitals.js":"4","C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Input.js":"5","C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Label.js":"6","C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Button.js":"7","C:\\Accenture\\web\\React\\contatore-redux\\src\\redux\\actionTypes.js":"8","C:\\Accenture\\web\\React\\contatore-redux\\src\\redux\\reducer.js":"9","C:\\Accenture\\web\\React\\contatore-redux\\src\\sagas\\counter.js":"10"},{"size":570,"mtime":1608298384050,"results":"11","hashOfConfig":"12"},{"size":466,"mtime":1608546775201,"results":"13","hashOfConfig":"12"},{"size":489,"mtime":1608303539269,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"12"},{"size":1089,"mtime":1608551586113,"results":"16","hashOfConfig":"12"},{"size":268,"mtime":1608307990780,"results":"17","hashOfConfig":"12"},{"size":463,"mtime":1608539058176,"results":"18","hashOfConfig":"12"},{"size":104,"mtime":1608302054757,"results":"19","hashOfConfig":"12"},{"size":1160,"mtime":1608550975723,"results":"20","hashOfConfig":"12"},{"size":1508,"mtime":1608551446864,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15cazur",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Accenture\\web\\React\\contatore-redux\\src\\index.js",[],["45","46"],"C:\\Accenture\\web\\React\\contatore-redux\\src\\store.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\App.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\reportWebVitals.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Input.js",["47"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Input(props){\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    //Il primo useEffect chiama changeValue appena  [value] (che è il valore della input) viene modificato! changeValue cambia il valore nello store\r\n    useEffect(() => {props.changeValue(value)}, [value]);\r\n    // Il secondo fa il contrario: quando il props.value viene modificato nello store, ad esempio dai button, chiama la funzione setValue che cambia il valore di value con props.value\r\n    useEffect(() => {setValue(props.value)}, [props.value]);\r\n\r\n    return (\r\n        <input type=\"number\" value={value} onChange={(ev) => setValue(ev.target.value)}/>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    //il connect passa questi oggetti alle props\r\n    state => ({value: state.value}), //mapStateToProps\r\n    dispatch => ({changeValue: (value) => dispatch(\r\n        //questo oggetto è la action che passo al reducer\r\n        {type: 'changeValue',\r\n        value: value}\r\n    )}) //mapDispatchtoProps\r\n)(Input);","C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Label.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\components\\Button.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\redux\\actionTypes.js",[],["48","49"],"C:\\Accenture\\web\\React\\contatore-redux\\src\\redux\\reducer.js",[],"C:\\Accenture\\web\\React\\contatore-redux\\src\\sagas\\counter.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":49,"nodeType":"56","endLine":8,"endColumn":56,"suggestions":"57"},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["62"],["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [props, value]",{"range":"65","text":"66"},[373,380],"[props, value]"]